import { UxPositioningOptions, UxPlacement, UxMissingSpaceStrategy, UxPositioningConfiguration } from './interfaces';
import { TaskQueue } from 'aurelia-framework';
import './ux-positioning.css';
export declare type UxPositioningFactory = (anchor: HTMLElement, element: HTMLElement, options?: UxPositioningOptions) => UxPositioning;
export declare class UxPositioning {
    taskQueue: TaskQueue;
    anchor: HTMLElement;
    element: HTMLElement;
    constraintElement: HTMLElement | Window;
    preferedPlacement: UxPlacement;
    missingSpaceStrategy: UxMissingSpaceStrategy;
    offsetX: number;
    offsetY: number;
    constraintMarginX: number;
    constraintMarginY: number;
    hiddenClass: string;
    private anchorRect;
    private elementRect;
    private hostOffsetX;
    private hostOffsetY;
    private constraintX;
    private constraintY;
    private constraintHeight;
    private constraintWidth;
    private spaceTop?;
    private spaceRight?;
    private spaceBottom?;
    private spaceLeft?;
    constructor(configuration: UxPositioningConfiguration, taskQueue: TaskQueue, anchor: HTMLElement, element: HTMLElement, options?: UxPositioningOptions);
    private init;
    update(): Promise<void>;
    private resetElement;
    private getMainPlacement;
    private prepare;
    private getSpaceTop;
    private getSpaceRight;
    private getSpaceBottom;
    private getSpaceLeft;
    private getAutoPlacement;
    private getSecondaryPlacement;
    private placeMain;
    private placeSecondary;
}
